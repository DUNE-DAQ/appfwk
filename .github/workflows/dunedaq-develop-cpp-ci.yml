name: build-develop

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: 
      - develop
      - patch/*
      - prep-release/*
    paths-ignore:
      - 'docs/**'
      - '.github/**'
  pull_request:
    branches: [ develop ]
  schedule:
    - cron: "0 7 * * *"

  workflow_dispatch:


jobs:
  Spack_Build_against_dev_release:
    name: spack_build_against_dev_on_${{ matrix.os_name }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: "ghcr.io/dune-daq/alma9-slim-externals:spack-dev-v2.0"
            os_name: "a9"
    container:
      image: ${{ matrix.image }}
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    
    - name: Checkout daq-release
      uses: actions/checkout@v3
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release
        
    - name: setup dev area
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          source /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh
          setup_dbt latest || true
          release_name="last_fddaq"
          nd_config=$GITHUB_WORKSPACE/daq-release/configs/nddaq/nddaq-develop/release.yaml
          if grep -q "name: ${REPO}\n" $nd_config; then release_name="last_nddaq"; fi
          dbt-create -n $release_name dev-${{ matrix.os_name }}

    - name: checkout package for CI
      uses: actions/checkout@v3
      with:
        path: ${{ github.repository }}
    
    - name: setup build env, build the repo against the development release
      #- name: setup build env, build and lint the repo against the development release
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          cd $GITHUB_WORKSPACE/dev-${{ matrix.os_name }}
          source env.sh || true
          spack unload $REPO || true
          cp -pr $GITHUB_WORKSPACE/DUNE-DAQ/$REPO $GITHUB_WORKSPACE/dev-${{ matrix.os_name }}/sourcecode
          dbt-build
          #[[ $REPO == "daq-cmake" ]] && dbt-build || dbt-build --lint
          dbt-workarea-env
          #dbt-build --unittest

    - name: upload build log file
      uses: actions/upload-artifact@v3
      with:
        name: spack_build_log_${{ matrix.os_name }}
        path: ${{ github.workspace }}/dev-${{ matrix.os_name }}/log/build*.log

          #- name: upload linter output file
          #uses: actions/upload-artifact@v3
          #with:
          #name: spack_linting_log_${{ matrix.os_name }}
          #path: ${{ github.workspace }}/dev-${{ matrix.os_name }}/log/linting*

          #- name: upload unittest output file
          #uses: actions/upload-artifact@v2
          #with:
          #name: spack_unit_tests_log_${{ matrix.os_name }}
          #path: ${{ github.workspace }}/dev-${{ matrix.os_name }}/log/unit_tests*
